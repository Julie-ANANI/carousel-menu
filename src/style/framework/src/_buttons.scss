@import "variables";
@import "mixins";

// The base class for the button, add the other classes with this to add the different styles

// todo remove this class
.btn {
  @include control-transition();
  @include inline-flex-centered();
  text-align: center;
  outline: none;
  position: relative;
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  text-decoration: none;
  line-height: $line-height-sm;
  background: $bg-white-color;
  border: $border-width solid $primary-color;
  font-size: $font-size-sm;
  height: 2.5rem;
  min-width: 5rem;
  border-radius: $border-radius;
  padding: $unit-2 $unit-8;
  font-weight: $font-weight-medium;

  i {
    margin-left: $unit-2;
    margin-right: $unit-2;
    font-size: $font-icon;
  }

  &.btn-close {
    transition: all 0.4s ease;
    background: transparent;
    border: 0;
    color: $white-color;
    height: 30px;
    padding: 0;
    text-decoration: none;
    position: relative;
    width: 12px;
    min-width: unset;
    line-height: 1.5;
    font-size: $font-icon-lg;

    &:hover {

      &::before {
        display: block;
        opacity: 0.15;
      }

      &::after {
        z-index: 2;
      }

    }

    &::before {
      display: none;
      content: '';
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: $bg-overlay-dark-color;
      position: absolute;
      opacity: 0;
    }

    &::after {
      content: "\2715";
    }

  }

  // Round button. In this you can add the icon, text, etc.
  &.btn-round {
    border-radius: 50%;
    width: 50px;
    height: 50px;
    min-width: 0;
    padding: 0;
    background: transparent none;
    border-color: $primary-color;
    font-size: $font-size-xs;
    color: $white-color;

    i {
      margin-left: 0;
      margin-right: 0;
      font-size: $font-icon-lg;
    }

    &.btn-round-md {
      width: 40px;
      height: 40px;

      i {
        font-size: 14px;
      }

    }

  }

  // Radio button like form-radio
  &.btn-radio {
    width: 22px;
    height: 22px;
    border-radius: 50%;
    min-width: 0;
    padding: 0;
    border: $border-width-lg solid $button-border-color;
    color: $white-color;
    font-size: $font-size-xs;

    span {
      color: $white-color;
      font-size: $font-icon-lg;
    }

  }

  &[disabled], &:disabled, &.disabled {
    color: $button-disabled-text-color !important;
    background-color: $button-disabled-bg-color !important;
    border-color: $button-border-color !important;
    cursor: not-allowed;
    box-shadow: none !important;
    pointer-events: auto;
    opacity: 1;
    border-width: $border-width-lg;
  }

  &.btn-primary {
    @include button-default-variant($primary-color);
  }

  &.btn-secondary {
    @include button-default-variant($secondary-color);
  }

  &.btn-edit {
    @include button-default-variant($meta-color);
  }

  &.btn-error {
    @include button-default-variant($alert-color);
  }

  &.btn-success {
    @include button-default-variant($success-color);
  }

  &.ghost-primary {
    @include button-ghost-variant($primary-color);
  }

  &.ghost-secondary {
    @include button-ghost-variant($secondary-color);
  }

  &.ghost-delete {
    @include button-ghost-variant($alert-color);
  }

  &.ghost-edit {
    @include button-ghost-variant($meta-color);
  }

  &.ghost-success {
    @include button-ghost-variant($success-color);
  }

  &.ghost-draft {
    @include button-ghost-variant($draft-color);
  }

  &.rounded {
    border-radius: 36px;
  }

  &.rounded.shadow {

    &.btn-primary {
      @include button-round-variant($primary-color);
    }

    &.btn-secondary {
      @include button-round-variant($secondary-color);
    }

    &.btn-edit {
      @include button-round-variant($meta-color);
    }

    &.btn-error {
      @include button-round-variant($alert-color);
    }

    &.btn-success {
      @include button-round-variant($success-color);
    }

  }

  &.no-hover {

    &.ghost-primary {
      @include ghost-button-no-hover-variant($primary-color);
    }

    &.ghost-edit {
      @include ghost-button-no-hover-variant($meta-color);
    }

    &.ghost-delete {
      @include ghost-button-no-hover-variant($alert-color);
    }

    &.ghost-draft {
      @include ghost-button-no-hover-variant($draft-color);
    }

  }

  &.ghost-background-hover {

    &.ghost-primary {
      @include button-ghost-background-variant($primary-color);
    }

    &.ghost-edit {
      @include button-ghost-background-variant($meta-color);
    }

    &.ghost-draft {
      @include button-ghost-background-variant($draft-color);
    }

  }

}

// Cancel button class that you have to add with button class
.btn-cancel:not(:disabled), .btn-cancel:not(:disabled):focus, .btn-cancel:not(:disabled):active, .btn-cancel:not(:disabled).active {
  color: $meta-color;
  background-color: $bg-white-color;
  border: none;
}

.btn-cancel:not(:disabled):hover {
  color: lighten($meta-color, 15%);
  background-color: $bg-white-color;
  border: none;
}

// Make a button large just add this class with the btn class
.btn-lg {
  padding-left: 4.2rem;
  padding-right: 4.2rem;
  height: 3.496rem;
  font-size: 1.25rem;
}


// Make a button small just add this class with the btn class
.btn-sm {
  height: 2rem;
  padding: $unit-2 $unit-4;
  font-size: $font-size-xs;

  i {
    font-size: $font-icon-sm;
  }

}


// Make a button extra small just add this class with the btn class
.btn-xs {
  height: 1.75rem;
  padding: $unit-2 $unit-3;
  font-size: $font-size-xs;

  i {
    font-size: $font-icon-xs;
  }

}

.buttons {
  @include flex-start();
  flex-wrap: wrap;
  margin-bottom: -0.5rem;

  .button:not(:last-child) {
    margin-right: 0.5rem;
  }

  .button {
    margin-bottom: 0.5rem;
  }

}


.button, .pagination-previous-control, .pagination-next-control, .pagination-link {
  @include inline-flex-centered();
  @include button-transition();
  text-align: center;
  outline: none;
  position: relative;
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  text-decoration: none;
  line-height: $line-height-sm;
  background: transparent;
  border: 2px solid transparent;
  font-size: $font-size-sm;
  color: $text-warning-color;
  border-radius: $border-radius;
  padding: 15px 20px;
  min-width: 125px;
  box-sizing: border-box;
  font-weight: $font-weight-medium;

  i {
    font-size: $font-icon;
    margin-left: $unit-2;
    margin-right: $unit-2;
    text-decoration: none;
  }

  &[disabled], &:disabled, &.disabled {
    cursor: not-allowed;
    box-shadow: none;
    opacity: 0.5;

    i {
      cursor: not-allowed;
    }

  }

  &.is-link {
    @include button-link-variant($bg-primary-color);

    &.loading {
      @include button-loading-variant($bg-primary-color);
    }

  }

  &.is-action {
    @include button-default-action-variant($bg-primary-color);

    &.is-shadowed {
      @include button-shadow-variant($bg-primary-color);
    }

  }

  &.is-primary {
    @include button-default-variant($bg-primary-color);

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-primary-color);
    }

  }

  &.is-outlined {
    @include button-outline-variant($bg-primary-color);
  }

  &.is-secondary {
    @include button-default-variant($bg-secondary-color);

    &.is-link, &.is-outlined {

      &.loading {
        @include button-loading-variant($bg-secondary-color);
      }

    }

    &.is-link {
      @include button-link-variant($bg-secondary-color);
    }

    &.is-action {
      @include button-default-action-variant($bg-secondary-color)
    }

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-outlined {
      @include button-outline-variant($bg-secondary-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-secondary-color);
    }

  }

  &.is-info {
    @include button-default-variant($bg-meta-color);

    &.is-link, &.is-outlined {

      &.loading {
        @include button-loading-variant($bg-meta-color);
      }

    }

    &.is-link {
      @include button-link-variant($bg-meta-color);
    }

    &.is-action {
      @include button-default-action-variant($bg-meta-color)
    }

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-outlined {
      @include button-outline-variant($bg-meta-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-meta-color);
    }

  }

  &.is-danger {
    @include button-default-variant($bg-alert-color);

    &.is-link, &.is-outlined {

      &.loading {
        @include button-loading-variant($bg-alert-color);
      }

    }

    &.is-link {
      @include button-link-variant($bg-alert-color);
    }

    &.is-action {
      @include button-default-action-variant($bg-alert-color)
    }

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-outlined {
      @include button-outline-variant($bg-alert-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-alert-color);
    }

  }

  &.is-draft {
    @include button-default-variant($bg-draft-color);

    &.is-link, &.is-outlined {

      &.loading {
        @include button-loading-variant($bg-draft-color);
      }

    }

    &.is-link {
      @include button-link-variant($bg-draft-color);
    }

    &.is-action {
      @include button-default-action-variant($bg-draft-color)
    }

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-outlined {
      @include button-outline-variant($bg-draft-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-draft-color);
    }

  }

  &.is-success {
    @include button-default-variant($bg-success-color);

    &.is-link, &.is-outlined {

      &.loading {
        @include button-loading-variant($bg-success-color);
      }

    }

    &.is-link {
      @include button-link-variant($bg-success-color);
    }

    &.is-action {
      @include button-default-action-variant($bg-success-color)
    }

    &.loading {
      @include button-loading-variant($bg-white-color);
    }

    &.is-outlined {
      @include button-outline-variant($bg-success-color);
    }

    &.is-shadowed {
      @include button-shadow-variant($bg-success-color);
    }

  }

  &.is-community {
    @include button-default-variant($bg-community-color);
  }

  &.is-loading {
    color: transparent;

    .loading {
      animation-duration: 0.2s;
      animation-timing-function: ease-in-out;
      animation-name: fadeIn;
      position: absolute;
      width: 100%;
      height: 100%;
    }

  }

  .icon-left {
    margin-right: $unit-2;
    margin-left: 0;
  }

  .icon-right {
    margin-right: 0;
    margin-left: $unit-2;
  }

  &.is-rounded {
    border-radius: 25px;
  }

  &.is-circled {
    border-radius: 50%;
    padding-left: 5px;
    padding-right: 5px;
    min-width: unset;
  }

  &.is-normal {
    padding: 15px 20px;
    font-size: $font-size-sm;

    i {
      font-size: $font-icon;
    }

    &.is-circled {
      padding-left: 5px;
      padding-right: 5px;
    }

  }

  &.is-sm {
    padding: 11px 20px;

    &.is-circled {
      padding-left: 1px;
      padding-right: 1px;
    }

  }

  &.is-xs {
    padding: 5px 20px;
    font-size: $font-size-xs;
  }

  &.is-lg, &.is-xl {
    padding: $unit-4 20px;
    width: 100%;
  }

  &.is-lg {
    font-size: $font-size-md;
    max-width: 272px;
  }

  &.is-xl {
    font-size: $font-size-lg;
    max-width: 370px;
  }

}
